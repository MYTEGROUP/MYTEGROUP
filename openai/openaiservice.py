# openai/openaiservice.py

import openai
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Retrieve OpenAI API key from .env
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# Initialize OpenAI with API key
openai.api_key = OPENAI_API_KEY

def generate_text(system_message, assistant_message, user_prompt):
    """
    Generate text using OpenAI API with custom system, assistant, and prompt messages.

    Parameters:
    system_message (str): The system message guiding the assistant's behavior.
    assistant_message (str): The initial message to simulate the assistant's behavior.
    user_prompt (str): The user's input for generating a response.

    Returns:
    str: The response generated by the OpenAI API.
    """
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": system_message},
                {"role": "assistant", "content": assistant_message},
                {"role": "user", "content": user_prompt}
            ]
        )
        return response.choices[0].message["content"]
    except Exception as e:
        print(f"Error generating text: {e}")
        return None
